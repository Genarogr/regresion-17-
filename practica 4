###################### matrices del ejercicio ########
##### 1) crear una matriz con la función dim () de 4 columnas 
#y 5 renglones, 
## esta matriz esta basada en un vector que contiene Estos 
#datos 11:31 
## el nombre de los renglones es el siguiente (toluca, 
#pachuca, gdl, mty)
## el nombre de las columnas es (escuela1, escuela2, escuela3, 
# Escuela4, escuela5)
## Incorporar el nombre a los renglones y las columnas de la matriz
## identifique el dato de la escuela 3 de toluca, de la escuela 5 de gdl y la escuela 1 de pachuca
###### 2) crear con la función matriz una matriz de 6 renglones
## y 3 columnas .... y preguntar por el dato de la matriz en el 
## renglon 3 y columna 3



vector <- 11:31
## como la dimension que pide la matriz no la genera R por el numero de datos son 21 
## la matriz necesita 20 datos 
### por lo tanto se corrigio el vector de nombre vector de 11:30
vector<- 11:30
View(vector)
dim(vector) <- c(4,5)
length(vector)
rownames(vector) <- c("toluca","pachuca","gdl","mty")
colnames(vector)<- c("escuela1","escuela2","escuela3","escuela4","escuela5","escuela6","escuela7")
View(vector)
vector[1,3] ## escuela 3 de toluca
vector[3,5] ## escuela 5 de gld
vector[2,1] ## escuela 1 de pachuca
### para pegar un renglon a la matriz vector
### primera entrada a que matriz le vas a pegar un renglon
vector <- rbind(vector,c(4,5,6,8,9,6,5))
vector <- cbind(vector,c(4,5,6,8,9,6,5,9,8))
### cambiar un dato en especifico
vector ["toluca", "escuela1"] <- 28
edit(vector)

##### crear una matriz con la funcion matriz
funcion <-  matrix(0:17,nrow=6,ncol=3,byrow=T)
View(funcion)
funcion[3,3]

#### para multiplicar matices se utiliza %*%
##j%*%i
## para transpuesta de una matriz se utiliza t()
t(j)

nombres <- c("sergio","juan","rocio","jessica")
### crear vectores
edad <- c(30,43,21,18)
altura <- c(170,165,175,172)    #crear vectores
salario <- c(3000,4500,2200,4300)

basem <- data.frame(nombres,edad,altura,salario)
View(basem)

### asigno el valor 178 a la posicion supongamos un error y esta altura es la correcta
## cuarto renglon 3 columna
basem [4,3]<- 178

### multiplicacion de la tabla basem en este caso el salario
### supongamos que el salario es muy bajo y lo queremos multiplicar por 2.2 
### de la base la seccion salario la multiplicaras por 2.2 y la vas a aseignar por salario de nuevo
basem$salario*2.2 -> basem$salario
basem

### suponer que se olvido una variable es la variable peso

peso <- c(83.2,75.2,69.3,70.5)### nuevo vector
basem <- data.frame(nombres,edad,altura,salario,peso)

basem$peso*1.2 -> basem$peso
basem
## funcion de redondeo
round(basem$peso,2) -> basem$peso


basem$escol <- c("prepa","lic","ninguno","prim")
basem

### incorporar la variable sexo
basem$sexo <- c(1,1,2,2)
basem

table(basem$sexo) ## tabla de frecuencia con sexo
### table con sexo

attach(basem)
table(sexo)
detach(basem)        ### quita el attach 

### crear un nuevo data frame con 3 variables
### sexo, facultad , estado conyugal. residencia
#tipo de vivienda





### instalar paqueterias desde internet
install.packages("foreign")
install.packages("questionr")
install.packages("car")
### de esta forma instalamos desde internet multiples
installed.packages(c("foreign","questionr","car"))

### la paqueteria foreign surve para exportar o importar base de datos
## questionr es para expandir frecuencias de bases de  datos muestrales
## car es para regresion
### dentro de cada paquete vienen multiples funciones que solo las podemos usar cuando mandandamos a llamar 
## el paquete
## para mandar a llamar una paqueteria instalada
## se usa library() y require()
library(foreing)
library(questionr)
library(car)







